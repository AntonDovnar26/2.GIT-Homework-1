Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash


JSON
 4. Создать внешний репозиторий c названием JSON.| press new -> 
fill in the form Create a new repository

 5. Клонировать репозиторий JSON на локальный компьютер.| git clone "name repository"

 6. Внутри локального JSON создать файл “new.json”.| touch new.json
 
 7. Добавить файл под гит.| git add new.json

 8. Закоммитить файл.| git commit -m "add new.json"

 9. Отправить файл на внешний GitHub репозиторий.|git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.|
    vim new.json
{
  "name": "Anton Dovnar",
  "age": "22",
  "petsNumber": "1",
  "expectedSalary": "5000"
}

 11. Отправить изменения на внешний репозиторий.| 
git add new.json 
git commit -m "first commit"
git push

 12. Создать файл preferences.json| touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.|
vim preferences.json
{
  "favMovie": "Avatar",
  "favSerial": "Big Bang THEORY",
  "favFood": "hamburger",
  "favSeason": "summer",
  "countryToVisit": "Canada"
}


 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON|
vim sklls.json
{
	"skills": [
	"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC."
	"Что такое клиент-серверная архитектура."
	"HTTP Методы запросов на сервер."
	"Коды ответов HTTP сервера."
	"Структуры HTTP запросов и ответов."
	"Что такое JSON, XML. Их структура."
	"Тестирование API через Postman (JS, автотесты API)."
	"Снятие и чтение логов c внешнего сервера."
	"Снифинг http web трафика через Charles и Fiddler."
	"Dev Tools веб браузеров (Google Chrome, FireFox)."
	"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)"
	"Мобильное тестирование."
	"Особенность iOS, Android, гайдлайны."
	"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)"
	"Сборка Android приложений на Android Studio."
	"ADB (управление андройд девайсами)."
	"Настройка прокси и vpn на iOS и Android."
	"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android."
	"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)"
	"Основы bash скриптинг, автоматизация рутинных задач на сервере."
	"Доступ к удалённым серверам."
	"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)."
	"База данных Postgres (установка, настройка и использование)"
	"Нереляционная база данных Redis (установка, настройка и использование)."
	"Нагрузочное тестирование в Jmeter."
	"Методология разработки Scrum."
	"Python. (Изучение основ. Создание клиент серверного приложения)"
	]
}


 15. Отправить сразу 2 файла на внешний репозиторий.|
git add preferences.json skills.json
git commit -m "commit"
git push

 16. На веб интерфейсе создать файл bug_report.json.| add file->create new file->bug_report.json"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.|
git add bug_report.json
git Commit -m"commit" 
git push
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.|
{
  
  "bug_ID": "1",
  "title": "///",
  "summary": "///",
  "STR": "///",
  "exp_res": "///",
  "act_res": "///",
  "screenshot": "///"

}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.|
git add bug_report.json
git Commit -m"commit" 


 20. Синхронизировать внешний и локальный репозиторий JSON|
git push


XML
 21. Создать внешний репозиторий c названием XML.| press new -> 
fill in the form Create a new repository

 22. Клонировать репозиторий XML на локальный компьютер.|git clone "name repository"

 23. Внутри локального XML создать файл “new.xml”.|touch new.xml

 24. Добавить файл под гит.|git add new.xml

 25. Закоммитить файл.|git commit -m "add new.xml"

 26. Отправить файл на внешний GitHub репозиторий.| git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.|
vim new.xml
<BIO>
 <NAME>Anton Dovnar</NAME>
 <AGE>22</AGE>
 <PETS_NUMBER>1</PETS_NUMBER>
 <SALARY_EXPECTATION>5000</SALARY_EXPECTATION>
</BIO>

 28. Отправить изменения на внешний репозиторий.|
git add new.xml
git commit -m "commit"
git push

 29. Создать файл preferences.xml|touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.|
<FAV_STUFF>
 <FAV_MOVIE>Avatar</FAV_MOVIE>
 <FAV_SERIAL>Big Bang THEORY</FAV_SERIAL>
 <FAV_FOOD>hamburger</FAV_FOOD>
 <FAV_SEASON>Sammer</FAV_SEASON>
 <COUNTRY_TO_VISIT>Canada</COUNTRY_TO_VISIT>
</FAV_STUFF>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML|
 touch skills.xml
vim skills.xml
<SKILLS>
  <SKILL_1>"skills": 
	"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC."
	"Что такое клиент-серверная архитектура."
	"HTTP Методы запросов на сервер."
	"Коды ответов HTTP сервера."
	"Структуры HTTP запросов и ответов."
	"Что такое JSON, XML. Их структура."
	"Тестирование API через Postman (JS, автотесты API)."
	"Снятие и чтение логов c внешнего сервера."
	"Снифинг http web трафика через Charles и Fiddler."
	"Dev Tools веб браузеров (Google Chrome, FireFox)."
	"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)"
	"Мобильное тестирование."
	"Особенность iOS, Android, гайдлайны."
	"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)"
	"Сборка Android приложений на Android Studio."
	"ADB (управление андройд девайсами)."
	"Настройка прокси и vpn на iOS и Android."
	"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android."
	"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)"
	"Основы bash скриптинг, автоматизация рутинных задач на сервере."
	"Доступ к удалённым серверам."
	"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)."
	"База данных Postgres (установка, настройка и использование)"
	"Нереляционная база данных Redis (установка, настройка и использование)."
	"Нагрузочное тестирование в Jmeter."
	"Методология разработки Scrum."
	"Python. (Изучение основ. Создание клиент серверного приложения)"</SKILL_1>
</SKILLS>

 32. Сделать коммит в одну строку.| git add . && git commit -m"2 file"

 33. Отправить сразу 2 файла на внешний репозиторий.| git push

 34. На веб интерфейсе создать файл bug_report.xml.| Creating bug_report.xml at remote repository

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.| Commited: "commit"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.|
<bug>
 <bug_ID>////</bug_ID>
 <title>///</title>
 <summary>////</summary>
 <STR>////</STR>
 <exp_res>////</exp_res>
</bug>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.|
git add bug_report.xml
git Commit -m"commit" 

 38. Синхронизировать внешний и локальный репозиторий XML| git push



TXT
 1. Создать внешний репозиторий c названием TXT.| press new -> 
fill in the form Create a new repository

 2. Клонировать репозиторий TXT на локальный компьютер.|git clone "name repository"

 3. Внутри локального TXT создать файл “new.txt”.|touch new.txt

 4. Добавить файл под гит.|git add new.txt

 5. Закоммитить файл.|git commit -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий.|git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.|
vim new.txt
Name: Anton Dovnar
Age: 22
Pets number: 1
Expected salary: 5000

 8. Отправить изменения на внешний репозиторий.|
git add new.txt
git commit -m "commit"
git push

 9. Создать файл preferences.txt| touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.|
vim preferences.txt
Favorite movie: Avatar
Favorite serial: Big Bang THEORY
Favorite food: Gamburger
Favorite season: Summery
Country I would like to visit: Canada

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT|
touch skills.txt
vim skills.txt
 Skills:
"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC."
	"Что такое клиент-серверная архитектура."
	"HTTP Методы запросов на сервер."
	"Коды ответов HTTP сервера."
	"Структуры HTTP запросов и ответов."
	"Что такое JSON, XML. Их структура."
	"Тестирование API через Postman (JS, автотесты API)."
	"Снятие и чтение логов c внешнего сервера."
	"Снифинг http web трафика через Charles и Fiddler."
	"Dev Tools веб браузеров (Google Chrome, FireFox)."
	"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)"
	"Мобильное тестирование."
	"Особенность iOS, Android, гайдлайны."
	"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)"
	"Сборка Android приложений на Android Studio."
	"ADB (управление андройд девайсами)."
	"Настройка прокси и vpn на iOS и Android."
	"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android."
	"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)"
	"Основы bash скриптинг, автоматизация рутинных задач на сервере."
	"Доступ к удалённым серверам."
	"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)."
	"База данных Postgres (установка, настройка и использование)"
	"Нереляционная база данных Redis (установка, настройка и использование)."
	"Нагрузочное тестирование в Jmeter."
	"Методология разработки Scrum."
	"Python. (Изучение основ. Создание клиент серверного приложения)"

 12. Сделать коммит в одну строку.|git add . && git commit -m"commit"

 13. Отправить сразу 2 файла на внешний репозиторий.| git push

 14. На веб интерфейсе создать файл bug_report.txt.| Created bug_report.txt at txt repository

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.| Commited: "commit"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.|
bug_report:

   Bug ID: 1
   Title: ///
   Summary: ///
   STR: ///
   Expected result: ///
   Actual result: ///
   Screenshot: ///

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.|
git add bug_report.txt.
git commit -m "commit"

 18. Синхронизировать внешний и локальный репозиторий TXT| git push
